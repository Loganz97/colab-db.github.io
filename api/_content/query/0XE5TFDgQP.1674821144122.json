[{"_path":"/notebooks/colabfold_advanced","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"AlphaFold2 Advanced - ColabFold","description":"Advanced AlphaFold pipeline using MMseqs2","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"colabfold-advanced"},"children":[{"type":"text","value":"ColabFold - Advanced"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This notebook modifies deepmind's original notebook (before AlphaFold-Multimer existed) to add experimental support for modeling complexes (both homo and hetero-oligomers), option to run MMseqs2 instead of Jackhmmer for MSA generation and advanced functionality."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mirdita M, Schütze K, Moriwaki Y, Heo L, Ovchinnikov S, Steinegger M. ColabFold: Making protein folding accessible to all. Nature Methods, 2022"}]}]},"git":"sokrypton/ColabFold","url":"https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb","license":"mit","type":"colab","category":"biology","tags":["Bio","structure prediction"],"image":"https://github.com/sokrypton/ColabFold/raw/main/.github/ColabFold_Marv_Logo.png","added":"2022-06-04","used_software":["py3Dmol","jax","alphafold"],"creator":[{"name":"Sergey Ovichnikov","twitter":"sokrypton","github":"sokrypton"},{"name":"Milot Mirdita","twitter":"milot_mirdita","github":"milot-mirdita"},{"name":"Konstantin Schütze"},{"name":"Yoshitaka Moriwaki"},{"name":"Lim Heo"},{"name":"Martin Steinegger"}],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"colabfold-advanced"},"children":[{"type":"text","value":"ColabFold - Advanced"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This notebook modifies deepmind's original notebook (before AlphaFold-Multimer existed) to add experimental support for modeling complexes (both homo and hetero-oligomers), option to run MMseqs2 instead of Jackhmmer for MSA generation and advanced functionality."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mirdita M, Schütze K, Moriwaki Y, Heo L, Ovchinnikov S, Steinegger M. ColabFold: Making protein folding accessible to all. Nature Methods, 2022"}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:colabfold_advanced.md","_source":"content","_file":"notebooks/colabfold_advanced.md","_extension":"md"},{"_path":"/notebooks/colabfold","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"AlphaFold2 - ColabFold","description":"Standard AlphaFold pipeline using MMseqs2","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"colabfold-alphafold2-using-mmseqs2"},"children":[{"type":"text","value":"ColabFold: AlphaFold2 using MMseqs2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Easy to use protein structure and complex prediction using AlphaFold2 and Alphafold2-multimer. Sequence alignments/templates are generated through MMseqs2 and HHsearch. For more details, see bottom of the notebook, checkout the ColabFold GitHub and read our manuscript."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mirdita M, Schütze K, Moriwaki Y, Heo L, Ovchinnikov S, Steinegger M. ColabFold: Making protein folding accessible to all. Nature Methods, 2022"}]}]},"git":"sokrypton/ColabFold","url":"https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb","license":"mit","type":"colab","category":"biology","tags":["Bio","structure prediction"],"image":"https://github.com/sokrypton/ColabFold/raw/main/.github/ColabFold_Marv_Logo.png","added":"2022-06-04","used_software":["py3Dmol","jax","alphafold"],"creator":[{"name":"Sergey Ovichnikov","twitter":"sokrypton","github":"sokrypton"},{"name":"Milot Mirdita","twitter":"milot_mirdita","github":"milot-mirdita"},{"name":"Konstantin Schütze"},{"name":"Yoshitaka Moriwaki"},{"name":"Lim Heo"},{"name":"Martin Steinegger"}],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"colabfold-alphafold2-using-mmseqs2"},"children":[{"type":"text","value":"ColabFold: AlphaFold2 using MMseqs2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Easy to use protein structure and complex prediction using AlphaFold2 and Alphafold2-multimer. Sequence alignments/templates are generated through MMseqs2 and HHsearch. For more details, see bottom of the notebook, checkout the ColabFold GitHub and read our manuscript."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mirdita M, Schütze K, Moriwaki Y, Heo L, Ovchinnikov S, Steinegger M. ColabFold: Making protein folding accessible to all. Nature Methods, 2022"}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:colabfold.md","_source":"content","_file":"notebooks/colabfold.md","_extension":"md"},{"_path":"/notebooks/diffdock","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"DiffDock","description":"Dock small ligands using a diffusion model","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implementation of DiffDock, state-of-the-art method for molecular docking, by Gabriele Corso*, Hannes Stark*, Bowen Jing*, Regina Barzilay and Tommi Jaakkola."}]}]},"url":"https://huggingface.co/spaces/simonduerr/diffdock","git":"simonduerr/diffdock","added":"2023-01-25","type":"huggingface","image":null,"category":"chemistry","license":"mit","tags":["drug discovery","diffusion"],"used_software":["py3Dmol","pytorch"],"creator":[{"name":"Corso, Gabriele","twitter":"gcorso","github":"gcorso","orcid":null},{"name":"Stärk, Hannes","twitter":"HannesStaerk","github":"  ","orcid":null},{"name":"Jing, Bowen","twitter":" ","github":" ","orcid":null},{"name":"Barzilay, Regina","twitter":" ","github":" ","orcid":null},{"name":"Jaakkola, Tommi","twitter":" ","github":" ","orcid":null}],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implementation of DiffDock, state-of-the-art method for molecular docking, by Gabriele Corso*, Hannes Stark*, Bowen Jing*, Regina Barzilay and Tommi Jaakkola."}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:diffdock.md","_source":"content","_file":"notebooks/diffdock.md","_extension":"md"},{"_path":"/notebooks/dmasifcolab","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"dMaSIF site","description":"Predict interaction sites using fingerprints","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"dmasif-site"},"children":[{"type":"text","value":"dMaSIF site"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Protein binding is determined by the chemical and geometric features between their surfaces. differentiable Molecular Surface Interaction Fingerprinting (dMaSIF) site is a geometric deep learning framework trained on these surface 'fingerprints' to identify potential protein binding sites. For more details, check out the original papers:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Gainza, P., Sverrisson, F., Monti, F., Rodola, E., Boscaini, D., Bronstein, M. M., & Correia, B. E. (2020). Deciphering interaction fingerprints from protein molecular surfaces using geometric deep learning. Nature Methods, 17(2), 184-192."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sverrisson, F., Feydy, J., Correia, B. E., & Bronstein, M. M. (2021). Fast end-to-end learning on protein surfaces. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (pp. 15272-15281)."}]}]}]},"git":"casperg92/MaSIF_colab","url":"https://colab.research.google.com/github/casperg92/MaSIF_colab/blob/main/dMaSIF_Colab_V1.ipynb","type":"colab","category":"biology","added":"2022-07-04","tags":["Bio","Geometric deep learning","surfaces"],"used_software":["py3Dmol","torch"],"creator":[{"name":"Casper Goverde","twitter":"CasperGoverde","github":"casperg92"},{"name":"Arne Schneuing","twitter":"rneschneuing"},{"name":"Freyr Sverisson","twitter":"FreyrSverrisson"},{"name":"Hamed Khakzad","twitter":"hamed_khakzad"},{"name":"Bruno Correia","twitter":"befcorreia"}],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"dmasif-site"},"children":[{"type":"text","value":"dMaSIF site"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Protein binding is determined by the chemical and geometric features between their surfaces. differentiable Molecular Surface Interaction Fingerprinting (dMaSIF) site is a geometric deep learning framework trained on these surface 'fingerprints' to identify potential protein binding sites. For more details, check out the original papers:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Gainza, P., Sverrisson, F., Monti, F., Rodola, E., Boscaini, D., Bronstein, M. M., & Correia, B. E. (2020). Deciphering interaction fingerprints from protein molecular surfaces using geometric deep learning. Nature Methods, 17(2), 184-192."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sverrisson, F., Feydy, J., Correia, B. E., & Bronstein, M. M. (2021). Fast end-to-end learning on protein surfaces. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (pp. 15272-15281)."}]}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:dmasifcolab.md","_source":"content","_file":"notebooks/dmasifcolab.md","_extension":"md"},{"_path":"/notebooks/openmm_pdbfixer","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"OpenMM + PDBFixer","description":"Short protocol to fix a PDB file of villin headpiece and run a molecular dynamics simulation","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Part of the "},{"type":"element","tag":"a","props":{"href":"https://openmm.github.io/openmm-cookbook/dev/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"OpenMM cookbook"}]}]}]},"url":"https://colab.research.google.com/gist/jchodera/32c6a2049df2d7b5b95703cee9a38158/first_simulation.ipynb","git":"openmm/openmm-cookbook","type":"colab","image":null,"category":"biology","license":"mit","added":"2023-01-01","tags":["md"],"used_software":["openmm"],"creator":[{"name":"John Chodera","twitter":"jchodera","github":"jchodera","orcid":null}],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Part of the "},{"type":"element","tag":"a","props":{"href":"https://openmm.github.io/openmm-cookbook/dev/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"OpenMM cookbook"}]}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:openmm_pdbfixer.md","_source":"content","_file":"notebooks/openmm_pdbfixer.md","_extension":"md"},{"_path":"/notebooks/proteinmpnn","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"ProteinMPNN","description":"Fast fixed backbone sequence redesign","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Quickly obtain new sequences for a given backbone. Allows to constrain different parts of the protein or design homomers."}]}]},"git":"simonduerr/ProteinMPNN","url":"https://hf.space/simonduerr/ProteinMPNN","type":"huggingface","category":"biology","added":"2022-06-07","tags":["Bio","sequence design"],"used_software":["3Dmol.js","torch","alphafold","moleculekit"],"creator":[{"name":"Simon Duerr","orcid":"0000-0002-4304-8106","twitter":"simonduerr","github":"duerrsimon"}],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Quickly obtain new sequences for a given backbone. Allows to constrain different parts of the protein or design homomers."}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:proteinmpnn.md","_source":"content","_file":"notebooks/proteinmpnn.md","_extension":"md"},{"_path":"/notebooks/rasp","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"RaSP - Deep learning stability predictions","description":"Pipeline version for predicting protein variants thermodynamic stability changes ( ΔΔG ) using a deep learning representation.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Preprint pipeline version for predicting protein variants "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"thermodynamic stability changes"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"span","props":{"className":["katex"]},"children":[{"type":"element","tag":"span","props":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tag":"span","props":{"className":["base"]},"children":[{"type":"element","tag":"span","props":{"className":["strut"],"style":"height:0.6833em;"},"children":[]},{"type":"element","tag":"span","props":{"className":["mord"]},"children":[{"type":"text","value":"ΔΔ"}]},{"type":"element","tag":"span","props":{"className":["mord","mathnormal"]},"children":[{"type":"text","value":"G"}]}]}]}]}]},{"type":"text","value":" using a deep learning representation. The program, using as input a protein structure (uploaded as PDB) returns stability predictions ("},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"span","props":{"className":["katex"]},"children":[{"type":"element","tag":"span","props":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tag":"span","props":{"className":["base"]},"children":[{"type":"element","tag":"span","props":{"className":["strut"],"style":"height:0.6833em;"},"children":[]},{"type":"element","tag":"span","props":{"className":["mord"]},"children":[{"type":"text","value":"ΔΔ"}]},{"type":"element","tag":"span","props":{"className":["mord","mathnormal"]},"children":[{"type":"text","value":"G"}]}]}]}]}]},{"type":"text","value":" in kcal/mol) for each variant at each position of the query protein.\nMore details can be found in: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Blaabjerg et al.:"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://www.biorxiv.org/content/10.1101/2022.07.14.500157v1","rel":["nofollow"]},"children":[{"type":"text","value":"\"Rapid protein stability prediction using deep learning representations\""}]},{"type":"text","value":". Source code is available on the project "},{"type":"element","tag":"a","props":{"href":"https://github.com/KULL-Centre/papers/tree/main/2022/ML-ddG-Blaabjerg-et-al","rel":["nofollow"]},"children":[{"type":"text","value":"Github"}]},{"type":"text","value":" page."}]}]},"url":"https://colab.research.google.com/github/KULL-Centre/papers/blob/main/2022/ML-ddG-Blaabjerg-et-al/RaSPLab.ipynb","git":"KULL-Centre/papers","type":["colab"],"image":null,"category":"biology","added":"2022-12-01","license":"mit","tags":["thermostability","proteins"],"used_software":["pytorch"],"creator":[{"name":"Matteo Cagiada","twitter":"CagiadaMatteo","github":null,"orcid":null}],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Preprint pipeline version for predicting protein variants "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"thermodynamic stability changes"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"span","props":{"className":["katex"]},"children":[{"type":"element","tag":"span","props":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tag":"span","props":{"className":["base"]},"children":[{"type":"element","tag":"span","props":{"className":["strut"],"style":"height:0.6833em;"},"children":[]},{"type":"element","tag":"span","props":{"className":["mord"]},"children":[{"type":"text","value":"ΔΔ"}]},{"type":"element","tag":"span","props":{"className":["mord","mathnormal"]},"children":[{"type":"text","value":"G"}]}]}]}]}]},{"type":"text","value":" using a deep learning representation. The program, using as input a protein structure (uploaded as PDB) returns stability predictions ("},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"span","props":{"className":["katex"]},"children":[{"type":"element","tag":"span","props":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tag":"span","props":{"className":["base"]},"children":[{"type":"element","tag":"span","props":{"className":["strut"],"style":"height:0.6833em;"},"children":[]},{"type":"element","tag":"span","props":{"className":["mord"]},"children":[{"type":"text","value":"ΔΔ"}]},{"type":"element","tag":"span","props":{"className":["mord","mathnormal"]},"children":[{"type":"text","value":"G"}]}]}]}]}]},{"type":"text","value":" in kcal/mol) for each variant at each position of the query protein.\nMore details can be found in: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Blaabjerg et al.:"}]},{"type":"text","value":" "},{"type":"element","tag":"a","props":{"href":"https://www.biorxiv.org/content/10.1101/2022.07.14.500157v1","rel":["nofollow"]},"children":[{"type":"text","value":"\"Rapid protein stability prediction using deep learning representations\""}]},{"type":"text","value":". Source code is available on the project "},{"type":"element","tag":"a","props":{"href":"https://github.com/KULL-Centre/papers/tree/main/2022/ML-ddG-Blaabjerg-et-al","rel":["nofollow"]},"children":[{"type":"text","value":"Github"}]},{"type":"text","value":" page."}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:rasp.md","_source":"content","_file":"notebooks/rasp.md","_extension":"md"},{"_path":"/notebooks/rdkit-etkdg","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Piperazine Ring Conformation using RDKit","description":"RDKIT ETKDG built conformations","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"3D conformers of molecules containing piperazine (or cyclohexane) using RDKit tend to get a distorted ring conformation. RDKit's ETKDG (Experimental Torsion angle Knowledge-based Distance Geometry) algorithm can be used to fix ring confromations. This notebook demonstrates its use and possible problems. It shows how to filter out non-desirable conformers or improve the RDKit's conformer generation routine."}]}]},"git":"sunhwan/blog","url":["https://hub.gke2.mybinder.org/user/sunhwan-blog-om5b2sa9/notebooks/_notebooks/2021-02-24-RDKit-ETKDG-Piperazine.ipynb","https://colab.research.google.com/github/sunhwan/blog/blob/master/_notebooks/2021-02-24-RDKit-ETKDG-Piperazine.ipynb"],"type":["binder","colab"],"category":"chemistry","added":"2022-12-02","tags":["chemoinformatics","drug discovery"],"used_software":["py3Dmol","rdkit"],"creator":[{"name":"Sunhwan Jo","twitter":"sunhwan","github":"sunhwan"}],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"3D conformers of molecules containing piperazine (or cyclohexane) using RDKit tend to get a distorted ring conformation. RDKit's ETKDG (Experimental Torsion angle Knowledge-based Distance Geometry) algorithm can be used to fix ring confromations. This notebook demonstrates its use and possible problems. It shows how to filter out non-desirable conformers or improve the RDKit's conformer generation routine."}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:rdkit-etkdg.md","_source":"content","_file":"notebooks/rdkit-etkdg.md","_extension":"md"},{"_path":"/notebooks/test","_dir":"notebooks","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Test","description":"Test","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Test"}]}]},"url":"https://test.com","git":"test/test","added":"2023-01-27","type":["colab"],"image":null,"category":"biology","license":"mit","tags":["structure prediction","surfaces"],"used_software":["py3Dmol"],"creator":[{"name":"Test","twitter":"test","github":"test","orcid":null}],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Test"}]}],"toc":{"title":"","searchDepth":3,"depth":3,"links":[]}},"_type":"markdown","_id":"content:notebooks:test.md","_source":"content","_file":"notebooks/test.md","_extension":"md"}]